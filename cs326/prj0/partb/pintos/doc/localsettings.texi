@c Local settings

@set coursenumber CS 326
@set localpintostarpath /home/web/benson/cs326/pintos/pintos.tar.gz
@set localpintoshttppath http://@/www.cs.usfca.edu/@/~benson/@/cs326/@/pintos/@/pintos.@/tar.gz
@set localpintosbindir /home/web/benson/cs326/pintos/bin

@set recommendvnc
@clear recommendcygwin

@macro localmachines{}
The CS 326 ``officially supported'' Pintos development machines are
the machines in the Harney CS Labs (HR 235 and HR 530) managed by the
Department of Computer Science.
@end macro

@macro localpathsetup{}
Under @command{bash}, USF's login shell, you can do so
with this command:
@example
export PATH = $PATH:@value{localpintosbindir}
@end example
@noindent
It is a good idea to add this line to the @file{.bash_profile} file
in your home directory.  Otherwise, you'll have to type it every time
you log in.
@end macro

@macro localcrossbuild{}
Watch the commands executed during the build.  On the Linux machines,
the ordinary system tools are used.  On a Mac, special build
tools are used, whose names begin with @samp{i386-elf-}, e.g.@:
@code{i386-elf-gcc}, @code{i386-elf-ld}.  These are ``cross-compiler''
tools.  That is, the build is running on a Mac machine (called the
@dfn{host}), but the result will run on a simulated 80@var{x}86 machine
(called the @dfn{target}).  The @samp{i386-elf-@var{program}} tools are
specially built for this configuration.
@end macro

@macro localhonorcodepolicy{}
In the context of USF's CS 326 course, please respect the spirit
and the letter of the honor code by refraining from reading any homework
solutions available online or elsewhere.  Reading the source code for
other operating system kernels, such as Linux or FreeBSD, is allowed,
but do not copy code from them literally.  Please cite the code that
inspired your own in your design documentation.
@end macro

@macro localcredits{}
@c none needed
@end macro

@macro localcvspolicy{}
Instead, we recommend integrating your team's changes early and often,
using a source code control system such as Git.
This is less likely to produce surprises, because everyone can see
everyone else's code as it is written, instead of just when it is
finished.  These systems also make it possible to review changes and,
when a change introduces a bug, drop back to working versions of code.
@end macro

@macro localcodingstandards{}
All of you should have taken a class like CS 220, so we expect you to be
familiar C programming, concurrency, and parallel programming.  Your code
should be consistent with the existing Pintos coding style.
@end macro

@macro localdevelopmenttools{}
@c Descriptions of additional, local development tools can be inserted here
@end macro
